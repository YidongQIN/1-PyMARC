@startuml BrIM

top to bottom direction
scale 1200*600

skinparam backgroundColor transparent
skinparam shadowing false
skinparam DefaultFontName Consolas

skinparam class {
    BackgroundColor White
    ArrowColor Black
    BorderColor Black
}

Interface MongoDB{
    mongo_db
    export_mg()
    import_mg()
    ' - argument_check()
}

class PyELMT{
    id
    type
    ' description*
    ' update()
}

class AbstractELMT{
    name
}

class PhysicalELMT{
    ' name
    material: Material
}

' hide PhysicalELMT circle

Interface OpenBrIM{
    ' openbrim_element: XML element
    export_ob()
    import_ob()
    ' - argument_check()
}

Interface OpenBrIM_fem{
    fem_elmt: XML
}

Interface OpenBrIM_geo{
    geo_elmt: XML
}

PyELMT <|-- AbstractELMT
PyELMT <|-- PhysicalELMT
OpenBrIM_fem <|.. AbstractELMT
OpenBrIM_fem <|.. PhysicalELMT
OpenBrIM_geo <|.. PhysicalELMT

OpenBrIM <|-- OpenBrIM_fem
OpenBrIM <|-- OpenBrIM_geo
MongoDB <|.. PyELMT

' class Project{}
' class Group
' class Parameter{
'     value: number
' }
' class Shape{
'     node_list[ ]
' }

class FENode{
    x
    y
    z
    fixity
    ' x: Parameter
    ' y: Parameter
    ' z: Parameter
    ' tx: Parameter
    ' ty: Parameter
    ' tz: Parameter
    ' rx: Parameter
    ' ry: Parameter
    ' rz: Parameter
}

class Material{
    type
    ' property[ ]: Parameter
    property[ ]
}

class Section{
    shape_node[ ]
}

' AbstractELMT <|-- Project
' AbstractELMT <|-- Group
' AbstractELMT <|-- Parameter
AbstractELMT <|-- FENode
AbstractELMT <|-- Section
AbstractELMT <|-- Material
' AbstractELMT <|-- Shape
' Shape -- Section

class Beam{
    fenode[2]
    section
    ' fenode1: FENode
    ' fenode2: FENode
    ' section: Section
    ' material: Material'
}
class Surface{
    fenode[ ]
    thickness
    ' fenode[ ]: FENode
    ' thickness: Parameter
}
' class Bolted_Plate
class Volume{
    fenode[ ]
    material
}
' class Sensor

PhysicalELMT <|-- Beam
PhysicalELMT <|-- Surface
' Surface <|-- Bolted_Plate
PhysicalELMT <|-- Volume
' PhysicalELMT <|-- Sensor

FENode -- Beam

@enduml
